{"version":3,"sources":["components/Service/Img-API.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["fetchImages","searchQuery","currentPage","axios","get","then","response","data","hits","Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","children","ImageGalleryItem","images","onClick","map","id","webformatURL","src","alt","Button","Spinner","color","height","width","timeout","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","document","querySelector","App","largeImage","isLoading","showModal","onSearchImages","onFetchImages","fetchedImages","length","prevState","scrolling","catch","finally","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","openImage","currentId","currentImg","find","image","largeImageURL","toggleModal","prevProps","shouldRenderLoadMoreButton","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a284e93.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst API_KEY = '19822472-14ec0e3f9ba277805ee5b06f8';\r\n\r\nexport function fetchImages(searchQuery, currentPage) {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = { query: '' };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.query.trim() === '') {\r\n      return toast.error('Enter word');\r\n    }\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button\"></span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ children }) {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n}\r\n\r\nImageGallery.propTypes = { children: PropTypes.element.isRequired };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ images, onClick }) {\r\n  return images.map(({ id, webformatURL }) => (\r\n    <li className=\"ImageGalleryItem\" key={id} onClick={() => onClick(id)}>\r\n      <img className=\"ImageGalleryItem-image\" src={webformatURL} alt=\"\" />\r\n    </li>\r\n  ));\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className=\"Button\">\r\n      Load more...\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nexport default function Spinner() {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"Hearts\"\r\n        color=\"#e91184\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.src} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      document.querySelector('#modal-root'),\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport { fetchImages } from './components/Service/Img-API';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem';\nimport Button from './components/Button';\nimport Spinner from './components/Loader';\nimport Modal from './components/Modal';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    largeImage: '',\n    currentPage: 1,\n    isLoading: false,\n    showModal: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) this.onFetchImages();\n  }\n\n  onSearchImages = query => {\n    this.setState({\n      images: [],\n      searchQuery: query,\n      currentPage: 1,\n    });\n  };\n\n  onFetchImages = () => {\n    this.setState({ isLoading: true });\n\n    fetchImages(this.state.searchQuery, this.state.currentPage)\n      .then(fetchedImages => {\n        if (fetchedImages.length === 0) {\n          return this.setState({\n            error: 'Oops, I can`t find any images...',\n          });\n        }\n        this.setState(prevState => ({\n          images: [...prevState.images, ...fetchedImages],\n          currentPage: prevState.currentPage + 1,\n          error: null,\n        }));\n        this.scrolling();\n      })\n      .catch(error => this.setState({ error: 'Try Again' }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  scrolling = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 500);\n  };\n\n  openImage = currentId => {\n    const currentImg = this.state.images.find(image => image.id === currentId);\n    this.setState({ largeImage: currentImg.largeImageURL });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  render() {\n    const { onSearchImages, openImage, onFetchImages, toggleModal } = this;\n    const { isLoading, showModal, largeImage, images, error } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <>\n        <Searchbar onSubmit={onSearchImages} />\n        <ImageGallery>\n          <ImageGalleryItem images={images} onClick={openImage} />\n        </ImageGallery>\n\n        {shouldRenderLoadMoreButton && <Button onClick={onFetchImages} />}\n\n        {isLoading && <Spinner />}\n\n        {showModal && <Modal onClose={toggleModal} src={largeImage}></Modal>}\n        {error && <p className=\"Error\">{error}</p>}\n        <ToastContainer autoClose={2000} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}