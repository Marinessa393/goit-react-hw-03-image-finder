{"version":3,"sources":["components/Service/Img-API.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["API_KEY","BASE_URL","fetchImages","query","page","a","url","fetch","then","response","ok","json","Promise","reject","Error","imageApi","propTypes","PropTypes","string","isRequired","number","Searchbar","state","handleQueryChange","event","setState","target","value","toLowerCase","handleQuerySubmit","preventDefault","trim","toast","error","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","tags","src","dataLargeImg","openModal","onClick","alt","data-largeimg","ImageGallery","images","map","id","webformatURL","largeImageURL","Button","modalRoot","document","querySelector","Modal","loading","handleOnClose","e","code","onClose","handleBackdropClick","currentTarget","prevState","window","addEventListener","handleImageLoaded","createPortal","onLoad","App","isLoading","modalImage","onSearch","fetchImg","hits","length","catch","finally","onLoadMore","scrolling","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","onOpenModal","dataset","largeimg","closeModal","prevProps","shouldRenderLoadMoreButton","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28a2f029.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nconst API_KEY = '19822472-14ec0e3f9ba277805ee5b06f8';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nasync function fetchImages(query, page) {\r\n  const url = `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n  return fetch(url).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`По запросу ${query} ничего не найдено`));\r\n  });\r\n}\r\n\r\nconst imageApi = { fetchImages };\r\nfetchImages.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\nexport default imageApi;\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n  handleQueryChange = event => {\r\n    this.setState({ query: event.target.value.toLowerCase() });\r\n  };\r\n\r\n  handleQuerySubmit = event => {\r\n    event.preventDefault();\r\n    const { query } = this.state;\r\n\r\n    if (query.trim() === '') {\r\n      return toast.error('введите запрос');\r\n    }\r\n\r\n    this.props.onSubmit(query);\r\n\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    const { handleQuerySubmit, handleQueryChange } = this;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={handleQuerySubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            value={this.state.query}\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={handleQueryChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({\r\n  tags,\r\n  src,\r\n  dataLargeImg,\r\n  openModal,\r\n}) {\r\n  return (\r\n    <li className=\"imageGalleryItem\">\r\n      <img\r\n        onClick={openModal}\r\n        src={src}\r\n        alt={tags}\r\n        data-largeimg={dataLargeImg}\r\n        className=\"imageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  dataLargeImg: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func,\r\n};\r\n","import ImageGalleryItem from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ images, openModal }) {\r\n  return (\r\n    <ul className=\"imageGallery\">\r\n      {images.map(({ id, tags, webformatURL, largeImageURL }) => {\r\n        return (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            tags={tags}\r\n            src={webformatURL}\r\n            dataLargeImg={largeImageURL}\r\n            openModal={openModal}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      bigImgURL: PropTypes.string.isRequired,\r\n      webURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({ fetchImages }) {\r\n  return (\r\n    <button type=\"button\" onClick={fetchImages} className=\"Button\">\r\n      Load more...\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n\r\n  toggleLoadind() {\r\n    this.setState(prevState => {\r\n      return { loading: !prevState.loading };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    window.addEventListener('keydown', this.handleOnClose);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener('keydown', this.handleOnClose);\r\n  }\r\n\r\n  handleOnClose = e => {\r\n    if (e.code !== 'Escape') {\r\n      return;\r\n    }\r\n\r\n    this.props.onClose();\r\n  };\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    const { handleBackdropClick, handleImageLoaded } = this;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n        <div className=\"Modal\" onLoad={handleImageLoaded}>\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport imageApi from './components/Service/Img-API';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from 'react-loader-spinner';\nimport Modal from './components/Modal';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    query: null,\n    isLoading: false,\n    openModal: false,\n    modalImage: null,\n    alt: null,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.query !== this.state.query ||\n      prevState.page !== this.state.page\n    ) {\n      this.fetchImg();\n    }\n  }\n\n  onSearch = query => {\n    this.setState({ query, images: [], page: 1, error: null });\n  };\n\n  fetchImg = async () => {\n    const { query, page } = this.state;\n\n    this.setState({ isLoading: true });\n\n    imageApi\n      .fetchImages(query, page)\n      .then(({ hits }) => {\n        if (hits.length === 0) {\n          return this.setState({\n            error: `Не удалось найти картинку по запросу ${query}`,\n          });\n        }\n        this.setState(({ images, page }) => ({\n          images: [...images, ...hits],\n          page: page,\n        }));\n      })\n      .catch(error => this.setState({ error: 'Побробуйте снова' }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  onLoadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n    this.scrolling();\n  };\n\n  scrolling = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 150,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n\n  onOpenModal = e => {\n    e.preventDefault();\n    this.setState({\n      openModal: true,\n      modalImage: e.target.dataset.largeimg,\n      alt: e.target.alt,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({ openModal: false });\n  };\n\n  render() {\n    const { images, isLoading, openModal, modalImage, alt, error } = this.state;\n    const { onSearch, onOpenModal, onLoadMore, closeModal } = this;\n    const shouldRenderLoadMoreButton = images.length > 0 && !error;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={onSearch} />\n        {!isLoading && <ImageGallery images={images} onClick={onOpenModal} />}\n        {isLoading && <Loader />}\n        {shouldRenderLoadMoreButton && <Button onClick={onLoadMore} />}\n        {openModal && <Modal onClose={closeModal} src={modalImage} alt={alt} />}\n        {error && <p className=\"Error\">{error}</p>}\n        <ToastContainer autoClose={2000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}